/*
 * Copyright 2021 Matt Jamesson <scifidryer@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package protocolwhisperer.drivers;

import javax.swing.*;
import java.util.*;
import java.awt.event.*;
import static protocolwhisperer.drivers.ModbusConfigFrame.dataTypeMenuNames;
import protocolwhisperer.*;

/**
 *
 * @author Matt Jamesson <scifidryer@gmail.com>
 */
public class StaticTagConfigFrame extends javax.swing.JFrame {

    /**
     * Creates new form CIPConfigFrame
     */
    StaticTagProtocolRecord currentRecord = null;
    ArrayList<TagMapper> tagGuiRecords = new ArrayList();
    BridgeManager manager = null;
    public StaticTagConfigFrame(StaticTagProtocolRecord aCurrentRecord, BridgeManager aManager) {
        initComponents();
        currentRecord = aCurrentRecord;
        manager = aManager;
        if (currentRecord.configured)
        {
            buildTagRecords(currentRecord.tagRecords); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPane = new javax.swing.JPanel();
        addTagPane = new javax.swing.JPanel();
        addTagButton = new javax.swing.JButton();
        headerPane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(70, 0), new java.awt.Dimension(70, 0), new java.awt.Dimension(70, 32767));
        jLabel4 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(70, 0), new java.awt.Dimension(70, 0), new java.awt.Dimension(70, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        tagRecordParent = new javax.swing.JPanel();
        tagRecordPane = new javax.swing.JPanel();
        okPane = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        topPane.setLayout(new javax.swing.BoxLayout(topPane, javax.swing.BoxLayout.Y_AXIS));

        addTagButton.setText("Add tag");
        addTagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTagButtonActionPerformed(evt);
            }
        });
        addTagPane.add(addTagButton);

        topPane.add(addTagPane);

        jLabel2.setText("Tag");
        headerPane.add(jLabel2);
        headerPane.add(filler1);

        jLabel4.setText("Initial value");
        headerPane.add(jLabel4);
        headerPane.add(filler2);

        topPane.add(headerPane);

        getContentPane().add(topPane, java.awt.BorderLayout.NORTH);

        tagRecordParent.setLayout(new java.awt.BorderLayout());

        tagRecordPane.setLayout(new javax.swing.BoxLayout(tagRecordPane, javax.swing.BoxLayout.Y_AXIS));
        tagRecordParent.add(tagRecordPane, java.awt.BorderLayout.NORTH);

        jScrollPane1.setViewportView(tagRecordParent);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okPane.add(okButton);

        getContentPane().add(okPane, java.awt.BorderLayout.SOUTH);

        setBounds(0, 0, 332, 268);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        currentRecord.configured = true;
        mapTagRecords();
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void addTagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTagButtonActionPerformed
        StaticTagRecord tagRecord = new StaticTagRecord();
        currentRecord.tagRecords.add(tagRecord);
        buildTagRecord(tagRecord);
        revalidate();
        repaint();
    }//GEN-LAST:event_addTagButtonActionPerformed

    public void mapTagRecords()
    {
        currentRecord.tagRecords.clear();
        for (int i = 0; i < tagGuiRecords.size(); i++)
        {
            currentRecord.tagRecords.add(tagGuiRecords.get(i).mapTagRecord());
        }
    }
    public void buildTagRecords(ArrayList<TagRecord> tagRecords)
    {
        for (int i = 0; i < tagRecords.size(); i++)
        {
            StaticTagRecord currentRecord = (StaticTagRecord)tagRecords.get(i);
            buildTagRecord(currentRecord);
        }
    }
    public void buildTagRecord(StaticTagRecord currentTagRecord)
    {
        JPanel currentTagPane = new JPanel();
        java.awt.Component tagField;
        if (currentRecord.type == ProtocolRecord.RECORD_TYPE_INCOMING)
        {
            tagField = new JTextField(10);
            if (currentTagRecord.configured)
            {
                ((JTextField)tagField).setText(currentTagRecord.tag);
            }
        }
        else
        {
            if (currentTagRecord.configured)
            {
                tagField = manager.getOutgoingRecordTags(currentTagRecord.tag);
            }
            else
            {
                tagField = manager.getOutgoingRecordTags("");
            }
        }
        JTextField valueField = new JTextField(10);
        currentTagPane.add(tagField);
        currentTagPane.add(valueField);
        JButton deleteButton = new JButton("Delete");
        currentTagPane.add(deleteButton);
        if (currentTagRecord.configured)
        {
            valueField.setText(currentTagRecord.getValue() + "");
        }
        tagRecordPane.add(currentTagPane);
        TagMapper tm = new TagMapper()
        {
            public StaticTagRecord mapTagRecord()
            {
                StaticTagRecord outputRecord = new StaticTagRecord();
                if (currentRecord.type == ProtocolRecord.RECORD_TYPE_INCOMING)
                {
                    outputRecord.tag = ((JTextField)tagField).getText();
                }
                else
                {
                    outputRecord.tag = ((JComboBox)tagField).getSelectedItem().toString();
                }
                outputRecord.setValue(Double.parseDouble(valueField.getText()));
                outputRecord.configured = true;
                return outputRecord;
            }
        };
        tagGuiRecords.add(tm);
        deleteButton.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent e)
        {
            tagGuiRecords.remove(tm);
            tagRecordPane.remove(currentTagPane);
            revalidate();
            repaint();
            
        }});
    }
    
    /**
     * @param args the command line arguments
     */
   
    public interface TagMapper
    {
        public StaticTagRecord mapTagRecord();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTagButton;
    private javax.swing.JPanel addTagPane;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel headerPane;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel okPane;
    private javax.swing.JPanel tagRecordPane;
    private javax.swing.JPanel tagRecordParent;
    private javax.swing.JPanel topPane;
    // End of variables declaration//GEN-END:variables
}
